{"ast":null,"code":"// Đảm bảo đường dẫn đúng\n\nexport function generateSeatLayout(config) {\n  const {\n    rows,\n    cols,\n    unavailableSeats = [],\n    labelingScheme = 'sequential',\n    specialLabels = []\n  } = config;\n  const seatData = [];\n  let sequentialCounter = 0;\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < cols; col++) {\n      const position = {\n        row,\n        col\n      };\n      const id = `${row}-${col}`;\n\n      // Kiểm tra xem có phải vị trí không khả dụng không\n      const isUnavailable = unavailableSeats.some(s => s.row === row && s.col === col);\n      if (isUnavailable) {\n        seatData.push({\n          id,\n          label: '',\n          status: 'unavailable',\n          gridPosition: position\n        });\n        continue;\n      }\n\n      // Kiểm tra xem có phải vị trí có nhãn đặc biệt không\n      const specialLabelData = specialLabels.find(s => s.row === row && s.col === col);\n      let label = '';\n      let status = 'free'; // Mặc định là 'free'\n\n      if (specialLabelData) {\n        // Chỉ đặt unavailable cho những ghế thực sự không thể đặt\n        label = specialLabelData.label;\n        // Chỉ những ghế này mới unavailable: Tài, Xế, X, Cửa, Lên\n        if (['Tài', 'Xế', 'X', 'Cửa', 'Lên'].includes(specialLabelData.label)) {\n          status = 'unavailable';\n        }\n        // Các ghế khác (như 1A, 1B) vẫn có thể đặt được\n      } else {\n        switch (labelingScheme) {\n          case 'A1':\n            label = `${String.fromCharCode(65 + row)}${col + 1}`;\n            break;\n          case '1A':\n            label = `${row + 1}${String.fromCharCode(65 + col)}`;\n            break;\n          case 'sequential':\n          default:\n            label = (sequentialCounter++).toString();\n            break;\n        }\n      }\n      if (row === 0 && col === 2) {\n        label = '1A';\n      } else if (row === 0 && col === 3) {\n        label = '1B';\n      }\n      seatData.push({\n        id,\n        label,\n        status,\n        gridPosition: position\n      });\n    }\n  }\n  return seatData;\n}","map":{"version":3,"names":["generateSeatLayout","config","rows","cols","unavailableSeats","labelingScheme","specialLabels","seatData","sequentialCounter","row","col","position","id","isUnavailable","some","s","push","label","status","gridPosition","specialLabelData","find","includes","String","fromCharCode","toString"],"sources":["D:/Projects/TicketManager/src/utils/seatLayoutGenerator.ts"],"sourcesContent":["import { SeatStatus } from \"../components/SeatMap\"; // Đảm bảo đường dẫn đúng\r\n\r\nexport interface GeneratedSeatData {\r\n    id: string;\r\n    label: string;\r\n    status: SeatStatus;\r\n    gridPosition: { row: number; col: number };\r\n}\r\n\r\nexport interface LayoutConfig {\r\n    type: 'coach' | 'movie' | 'train';\r\n    rows: number;\r\n    cols: number;\r\n    unavailableSeats?: { row: number; col: number }[];\r\n    labelingScheme?: 'A1' | '1A' | 'sequential';\r\n    // Thêm mục này để định nghĩa các nhãn đặc biệt\r\n    specialLabels?: { row: number; col: number; label: string }[];\r\n}\r\n\r\nexport function generateSeatLayout(config: LayoutConfig): GeneratedSeatData[] {\r\n    const {\r\n        rows,\r\n        cols,\r\n        unavailableSeats = [],\r\n        labelingScheme = 'sequential',\r\n        specialLabels = []\r\n    } = config;\r\n\r\n    const seatData: GeneratedSeatData[] = [];\r\n    let sequentialCounter = 0;\r\n\r\n    for (let row = 0; row < rows; row++) {\r\n        for (let col = 0; col < cols; col++) {\r\n            const position = { row, col };\r\n            const id = `${row}-${col}`;\r\n\r\n            // Kiểm tra xem có phải vị trí không khả dụng không\r\n            const isUnavailable = unavailableSeats.some(s => s.row === row && s.col === col);\r\n            if (isUnavailable) {\r\n                seatData.push({ id, label: '', status: 'unavailable', gridPosition: position });\r\n                continue;\r\n            }\r\n\r\n            // Kiểm tra xem có phải vị trí có nhãn đặc biệt không\r\n            const specialLabelData = specialLabels.find(s => s.row === row && s.col === col);\r\n\r\n\r\n            let label = '';\r\n            let status: SeatStatus = 'free'; // Mặc định là 'free'\r\n\r\n\r\n            if (specialLabelData) {\r\n                // Chỉ đặt unavailable cho những ghế thực sự không thể đặt\r\n                label = specialLabelData.label;\r\n                // Chỉ những ghế này mới unavailable: Tài, Xế, X, Cửa, Lên\r\n                if (['Tài', 'Xế', 'X', 'Cửa', 'Lên'].includes(specialLabelData.label)) {\r\n                    status = 'unavailable';\r\n                }\r\n                // Các ghế khác (như 1A, 1B) vẫn có thể đặt được\r\n            } else {\r\n                switch (labelingScheme) {\r\n                    case 'A1':\r\n                        label = `${String.fromCharCode(65 + row)}${col + 1}`;\r\n                        break;\r\n                    case '1A':\r\n                        label = `${row + 1}${String.fromCharCode(65 + col)}`;\r\n                        break;\r\n                    case 'sequential':\r\n                    default:\r\n                        label = (sequentialCounter++).toString();\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (row === 0 && col === 2) {\r\n                label = '1A';\r\n            }\r\n            else if (row === 0 && col === 3) {\r\n                label = '1B';\r\n            }\r\n\r\n            seatData.push({ id, label, status, gridPosition: position });\r\n        }\r\n    }\r\n\r\n    return seatData;\r\n}\r\n"],"mappings":"AAAoD;;AAmBpD,OAAO,SAASA,kBAAkBA,CAACC,MAAoB,EAAuB;EAC1E,MAAM;IACFC,IAAI;IACJC,IAAI;IACJC,gBAAgB,GAAG,EAAE;IACrBC,cAAc,GAAG,YAAY;IAC7BC,aAAa,GAAG;EACpB,CAAC,GAAGL,MAAM;EAEV,MAAMM,QAA6B,GAAG,EAAE;EACxC,IAAIC,iBAAiB,GAAG,CAAC;EAEzB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,IAAI,EAAEO,GAAG,EAAE,EAAE;IACjC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,IAAI,EAAEO,GAAG,EAAE,EAAE;MACjC,MAAMC,QAAQ,GAAG;QAAEF,GAAG;QAAEC;MAAI,CAAC;MAC7B,MAAME,EAAE,GAAG,GAAGH,GAAG,IAAIC,GAAG,EAAE;;MAE1B;MACA,MAAMG,aAAa,GAAGT,gBAAgB,CAACU,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,GAAG,KAAKA,GAAG,IAAIM,CAAC,CAACL,GAAG,KAAKA,GAAG,CAAC;MAChF,IAAIG,aAAa,EAAE;QACfN,QAAQ,CAACS,IAAI,CAAC;UAAEJ,EAAE;UAAEK,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE,aAAa;UAAEC,YAAY,EAAER;QAAS,CAAC,CAAC;QAC/E;MACJ;;MAEA;MACA,MAAMS,gBAAgB,GAAGd,aAAa,CAACe,IAAI,CAACN,CAAC,IAAIA,CAAC,CAACN,GAAG,KAAKA,GAAG,IAAIM,CAAC,CAACL,GAAG,KAAKA,GAAG,CAAC;MAGhF,IAAIO,KAAK,GAAG,EAAE;MACd,IAAIC,MAAkB,GAAG,MAAM,CAAC,CAAC;;MAGjC,IAAIE,gBAAgB,EAAE;QAClB;QACAH,KAAK,GAAGG,gBAAgB,CAACH,KAAK;QAC9B;QACA,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAACK,QAAQ,CAACF,gBAAgB,CAACH,KAAK,CAAC,EAAE;UACnEC,MAAM,GAAG,aAAa;QAC1B;QACA;MACJ,CAAC,MAAM;QACH,QAAQb,cAAc;UAClB,KAAK,IAAI;YACLY,KAAK,GAAG,GAAGM,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGf,GAAG,CAAC,GAAGC,GAAG,GAAG,CAAC,EAAE;YACpD;UACJ,KAAK,IAAI;YACLO,KAAK,GAAG,GAAGR,GAAG,GAAG,CAAC,GAAGc,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGd,GAAG,CAAC,EAAE;YACpD;UACJ,KAAK,YAAY;UACjB;YACIO,KAAK,GAAG,CAACT,iBAAiB,EAAE,EAAEiB,QAAQ,CAAC,CAAC;YACxC;QACR;MACJ;MAEA,IAAIhB,GAAG,KAAK,CAAC,IAAIC,GAAG,KAAK,CAAC,EAAE;QACxBO,KAAK,GAAG,IAAI;MAChB,CAAC,MACI,IAAIR,GAAG,KAAK,CAAC,IAAIC,GAAG,KAAK,CAAC,EAAE;QAC7BO,KAAK,GAAG,IAAI;MAChB;MAEAV,QAAQ,CAACS,IAAI,CAAC;QAAEJ,EAAE;QAAEK,KAAK;QAAEC,MAAM;QAAEC,YAAY,EAAER;MAAS,CAAC,CAAC;IAChE;EACJ;EAEA,OAAOJ,QAAQ;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}