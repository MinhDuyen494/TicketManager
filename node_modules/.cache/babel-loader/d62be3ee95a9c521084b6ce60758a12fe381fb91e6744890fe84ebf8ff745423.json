{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\TicketManager\\\\src\\\\components\\\\SchedulePanel.tsx\";\nimport React from \"react\";\nimport { Col, Form, Row } from \"react-bootstrap\";\nimport Calendar from \"react-calendar\";\nimport './CustomCalendar.css';\nimport './TimeGrid.css';\n\n// Cấu trúc dữ liệu cho một khung giờ\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SchedulePanel = ({\n  routes,\n  selectedRoute,\n  onRouteSelect,\n  selectedDate,\n  onDateChange,\n  timeSlots,\n  selectedTime,\n  onTimeSelect\n}) => {\n  const handleCalendarChange = value => {\n    if (value instanceof Date) {\n      onDateChange(value);\n    }\n  };\n\n  // Hàm trả về class CSS dựa trên trạng thái của slot và giờ đang được chọn\n  const getStatusClass = slot => {\n    if (selectedTime === slot.time) {\n      return 'status-selected'; // Luôn ưu tiên hiển thị trạng thái đang được chọn\n    }\n    return `status-${slot.status}`; // Nếu không thì hiển thị trạng thái của chính nó (available hoặc full)\n  };\n  const formatShortWeekday = (locale, date) => {\n    if (locale === 'vi-VN') {\n      const dayIndex = date.getDay(); // 0 = Sunday, 1 = Monday ...\n      const customDayHeaders = [\"CN\", \"H\", \"B\", \"T\", \"N\", \"S\", \"B\", \"CN\"]; // Sun, Mon, Tue...\n      return customDayHeaders[dayIndex];\n    }\n    // Fallback for other locales or if vi-VN is not specified\n    return date.toLocaleDateString(locale, {\n      weekday: 'short'\n    }).charAt(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n      \"aria-label\": \"Ch\\u1ECDn tuy\\u1EBFn \\u0111\\u01B0\\u1EDDng\",\n      className: \"mb-3\",\n      value: selectedRoute,\n      onChange: e => onRouteSelect(e.target.value) // Gọi callback khi giá trị thay đổi\n      ,\n      children: routes.map(route => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: route,\n        children: route\n      }, route, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleCalendarChange,\n      value: selectedDate,\n      className: 'mb-3',\n      locale: \"vi-VN\",\n      formatShortWeekday: (locale, date) => formatShortWeekday(locale, date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 3,\n      className: \"g-2 time-grid-container\",\n      children: [\" \", timeSlots.map(slot => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot ${getStatusClass(slot)}`,\n          onClick: () => slot.status !== 'full' && onTimeSelect(slot.time),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-slot-time\",\n            children: slot.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), slot.info && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-slot-info\",\n            children: slot.info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, slot.time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_c = SchedulePanel;\nvar _c;\n$RefreshReg$(_c, \"SchedulePanel\");","map":{"version":3,"names":["React","Col","Form","Row","Calendar","jsxDEV","_jsxDEV","SchedulePanel","routes","selectedRoute","onRouteSelect","selectedDate","onDateChange","timeSlots","selectedTime","onTimeSelect","handleCalendarChange","value","Date","getStatusClass","slot","time","status","formatShortWeekday","locale","date","dayIndex","getDay","customDayHeaders","toLocaleDateString","weekday","charAt","children","Select","className","onChange","e","target","map","route","fileName","_jsxFileName","lineNumber","columnNumber","xs","onClick","info","_c","$RefreshReg$"],"sources":["D:/Projects/TicketManager/src/components/SchedulePanel.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Form, ListGroup, Row } from \"react-bootstrap\";\r\nimport Calendar from \"react-calendar\";\r\nimport './CustomCalendar.css'\r\nimport './TimeGrid.css'\r\n\r\n// Cấu trúc dữ liệu cho một khung giờ\r\nexport interface TimeSlot {\r\n    time: string;\r\n    info?: string; // Ví dụ: \"28/33\"\r\n    status: 'available' | 'full'; // Chỉ cần 'available' và 'full'. 'selected' sẽ được xử lý riêng.\r\n}\r\n\r\ninterface SchedulePanelProps {\r\n    // Props mới cho dropdown\r\n    routes: string[]; // Danh sách các tuyến đường, ví dụ: [\"Bến Tre - Sài Gòn\", \"Sài Gòn - Bến Tre\"]\r\n    selectedRoute: string; // Tuyến đường đang được chọn\r\n    onRouteSelect: (route: string) => void; // Hàm được gọi khi chọn tuyến đường mới\r\n\r\n    onDateChange: (date: Date) => void; // Callback khi ngày trên lịch thay đổi\r\n    selectedDate: Date; // Ngày đang được chọn, truyền từ component cha\r\n\r\n\r\n    timeSlots: TimeSlot[];\r\n    selectedTime: string | null;\r\n    onTimeSelect: (time: string) => void;\r\n}\r\n\r\nexport const SchedulePanel: React.FC<SchedulePanelProps> = ({\r\n    routes,\r\n    selectedRoute,\r\n    onRouteSelect,\r\n    selectedDate,\r\n    onDateChange,\r\n    timeSlots,\r\n    selectedTime,\r\n    onTimeSelect\r\n}) => {\r\n\r\n    const handleCalendarChange = (value: any) => {\r\n        if (value instanceof Date) {\r\n            onDateChange(value);\r\n        }\r\n    };\r\n\r\n    // Hàm trả về class CSS dựa trên trạng thái của slot và giờ đang được chọn\r\n    const getStatusClass = (slot: TimeSlot) => {\r\n        if (selectedTime === slot.time) {\r\n            return 'status-selected'; // Luôn ưu tiên hiển thị trạng thái đang được chọn\r\n        }\r\n        return `status-${slot.status}`; // Nếu không thì hiển thị trạng thái của chính nó (available hoặc full)\r\n    };\r\n\r\n    const formatShortWeekday = (locale: string | undefined, date: Date): string => {\r\n        if (locale === 'vi-VN') {\r\n            const dayIndex = date.getDay(); // 0 = Sunday, 1 = Monday ...\r\n            const customDayHeaders = [\"CN\", \"H\", \"B\", \"T\", \"N\", \"S\", \"B\", \"CN\"]; // Sun, Mon, Tue...\r\n            return customDayHeaders[dayIndex];\r\n\r\n        }\r\n        // Fallback for other locales or if vi-VN is not specified\r\n        return date.toLocaleDateString(locale, { weekday: 'short' }).charAt(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* 3. Thêm Dropdown (Form.Select) */}\r\n            <Form.Select\r\n                aria-label=\"Chọn tuyến đường\"\r\n                className=\"mb-3\"\r\n                value={selectedRoute}\r\n                onChange={(e) => onRouteSelect(e.target.value)} // Gọi callback khi giá trị thay đổi\r\n            >\r\n                {/* Lặp qua mảng routes để tạo các lựa chọn */}\r\n                {routes.map(route => (\r\n                    <option key={route} value={route}>\r\n                        {route}\r\n                    </option>\r\n                ))}\r\n            </Form.Select>\r\n            <Calendar\r\n                onChange={handleCalendarChange}\r\n                value={selectedDate}\r\n                className={'mb-3'}\r\n                locale=\"vi-VN\"\r\n                formatShortWeekday={(locale, date) => formatShortWeekday(locale, date)}\r\n            />\r\n\r\n            {/* Sử dụng Row và Col của Bootstrap để tạo lưới */}\r\n            <Row xs={3} className=\"g-2 time-grid-container\"> {/* 3 cột, gap là 2 */}\r\n                {timeSlots.map(slot => (\r\n                    <Col key={slot.time}>\r\n                        <div\r\n                            className={`time-slot ${getStatusClass(slot)}`}\r\n                            onClick={() => slot.status !== 'full' && onTimeSelect(slot.time)}\r\n                        >\r\n                            <div className=\"time-slot-time\">{slot.time}</div>\r\n                            {slot.info && <div className=\"time-slot-info\">{slot.info}</div>}\r\n                        </div>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    )\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}